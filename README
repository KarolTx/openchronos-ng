
fork of the openchronos-ng that implements interfacing with intertechno radio switches

 Author:          Petre Rodan <petre.rodan@simplex.ro>
 Available from:  https://github.com/rodan/openchronos-rfsw
 License:         GNU GPLv3

 Based on a nice tutorial by Christian M. Schmid
 http://blog.chschmid.com/?page_id=193

 Usage:

 Line1 contains FF.DD

 FF is the decimal notation of the family in which the device is placed [1-16]
                  A is 01, B is 02 ... P is 16.
                  this option must be used for doorbell/PIR device selection
 DD is the decimal notation of the device number [1-16]
                  on some factory remotes devices are placed in 4 groups,
                  in this case device 2 from group 3 is device number 10.
                  special devices like doorbell/PIRs must be set as device number 8.

 Line2 becomes 'on', 'off', 'spe' depending on what command was sent last

  if compile time option CONFIG_MOD_INTERTECHNO_PW is set then the output power is 
 selectable on Line2.

 radio glyphs come up when the command is sent.

 buttons:

 up      - send an 'on' command on the current device
 down    - send an 'off' command
 #       - send a special command (for doorbells/PIRs), make sure DD is 8 in this case.
 long *  - enter config mode. use up, down, # to select family and device, * to save.

forked on the 30th Oct 2012 from
openchronos-ng - http://openchronos-ng.sourceforge.net/

== Status ==
In progress..

This is a major rework of the entire system. For now, only this is working:
* clock (based on hardware time keeping, no more inaccuracy).
* alarm (also based on hardware).
* RFBSL wireless update.

It might not look a lot and it isn't because most of the work was done in the
core openchronos. Basically, at core level, this was what has been done:
* Implementation of a system wide message bus.
* Implementation of a RTC driver (for clock and alarm).
* Rework of timer and ports drivers.
* Implementation of a module system (drop in applications).
* Rework of the display routines.
* Rework of the menu system.

In summary, you should expect the code to be more stable, smaller and easier
to understand.

== Requirements ==

* msp430 toolchain (DO NOT USE msp430-gcc4, IT IS DEPRECATED)
* python

== Recommended Toolchain ==

gcc-4.4.3
binutils-2.20.1
libc-20120430
